{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/lobby/ChatLobby.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { getChannels, getUsers, getUserChannel, getOtherUserInfo } from '../../api/logic/getters';\nimport ChannelDescription from '../channel/channelDescription/ChannelDescription';\nimport ChatMenu from '../menu/ChatMenu';\nimport TeamChat from '../menu/TeamChat';\nimport './chatlobby.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatLobby() {\n  _s();\n\n  const currentUser = getUsers()[0];\n  const [channels, setChannels] = useState(getUserChannel(currentUser.id, getChannels()));\n  const [users, setUsers] = useState(getUsers());\n  const [selectedChannel, setSelectedChannel] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-lobby\",\n    children: [/*#__PURE__*/_jsxDEV(TeamChat, {\n      channels: channels,\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), Object.keys(selectedChannel).length !== 0 ? /*#__PURE__*/_jsxDEV(ChatMenu, {\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      currentUser: currentUser,\n      isPrivate: selectedChannel.name === \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this) : \"\", Object.keys(selectedChannel).length !== 0 ? /*#__PURE__*/_jsxDEV(ChannelDescription, {\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatLobby, \"ZJBRYdjT+uzxWv4iJaWtslYhgEQ=\");\n\n_c = ChatLobby;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLobby\");","map":{"version":3,"names":["React","useState","getChannels","getUsers","getUserChannel","getOtherUserInfo","ChannelDescription","ChatMenu","TeamChat","ChatLobby","currentUser","channels","setChannels","id","users","setUsers","selectedChannel","setSelectedChannel","Object","keys","length","name"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/lobby/ChatLobby.jsx"],"sourcesContent":["import { React, useState } from 'react';\nimport { getChannels, getUsers, getUserChannel, getOtherUserInfo } from '../../api/logic/getters';\nimport ChannelDescription from '../channel/channelDescription/ChannelDescription';\nimport ChatMenu from '../menu/ChatMenu';\nimport TeamChat from '../menu/TeamChat';\nimport './chatlobby.css';\n\nexport default function ChatLobby() {\n        \n    const currentUser = getUsers()[0];\n    \n    const [channels, setChannels] = useState(getUserChannel(currentUser.id, getChannels()));\n    const [users, setUsers] = useState(getUsers());\n    const [selectedChannel, setSelectedChannel] = useState({});    \n\n    return(\n        <div className=\"chat-lobby\">\n            <TeamChat channels={channels}\n            selectedChannel={selectedChannel}\n            setSelectedChannel={setSelectedChannel}\n            currentUser={currentUser}\n            />\n            {Object.keys(selectedChannel).length !== 0 ? \n            <ChatMenu selectedChannel={selectedChannel} setSelectedChannel={setSelectedChannel} currentUser={currentUser} isPrivate={selectedChannel.name === \"\"}/> :\n            \"\"}\n            {Object.keys(selectedChannel).length !== 0 ? \n            <ChannelDescription \n            selectedChannel={selectedChannel}\n            setSelectedChannel={setSelectedChannel}\n            currentUser={currentUser}/> :\n            \"\"}\n        </div>\n    )\n}"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,cAAhC,EAAgDC,gBAAhD,QAAwE,yBAAxE;AACA,OAAOC,kBAAP,MAA+B,kDAA/B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,iBAAP;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAEhC,MAAMC,WAAW,GAAGP,QAAQ,GAAG,CAAH,CAA5B;EAEA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAACG,cAAc,CAACM,WAAW,CAACG,EAAb,EAAiBX,WAAW,EAA5B,CAAf,CAAxC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAACE,QAAQ,EAAT,CAAlC;EACA,MAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,EAAD,CAAtD;EAEA,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,wBACI,QAAC,QAAD;MAAU,QAAQ,EAAEU,QAApB;MACA,eAAe,EAAEK,eADjB;MAEA,kBAAkB,EAAEC,kBAFpB;MAGA,WAAW,EAAEP;IAHb;MAAA;MAAA;MAAA;IAAA,QADJ,EAMKQ,MAAM,CAACC,IAAP,CAAYH,eAAZ,EAA6BI,MAA7B,KAAwC,CAAxC,gBACD,QAAC,QAAD;MAAU,eAAe,EAAEJ,eAA3B;MAA4C,kBAAkB,EAAEC,kBAAhE;MAAoF,WAAW,EAAEP,WAAjG;MAA8G,SAAS,EAAEM,eAAe,CAACK,IAAhB,KAAyB;IAAlJ;MAAA;MAAA;MAAA;IAAA,QADC,GAED,EARJ,EASKH,MAAM,CAACC,IAAP,CAAYH,eAAZ,EAA6BI,MAA7B,KAAwC,CAAxC,gBACD,QAAC,kBAAD;MACA,eAAe,EAAEJ,eADjB;MAEA,kBAAkB,EAAEC,kBAFpB;MAGA,WAAW,EAAEP;IAHb;MAAA;MAAA;MAAA;IAAA,QADC,GAKD,EAdJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GA1BuBD,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}