{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/Popup/AddChannelPopup/AddChannelPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./addchannelpopup.css\";\nimport { AiOutlineSmile } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons/lib\";\nimport Picker from 'emoji-picker-react';\nimport Select from 'react-select';\nimport SignalrEvents from \"../../../api/SignalrEvents\";\nimport Popup from \"../Popup\";\nimport { getAllUsers } from \"../../../api/user/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst createChannelEvent = new SignalrEvents('CreateRoom', 'AddChannel');\nexport default function AddChannelPopup(_ref) {\n  _s();\n\n  let {\n    connectionController,\n    currentUser,\n    setChannels,\n    setIsPopupOpen\n  } = _ref;\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    getAllUsers().then(data => {\n      setUsers(data);\n    }).catch(err => console.log(err));\n  }, []);\n  const options = users.filter(user => user.id !== currentUser.user.id).map(user => {\n    return {\n      value: user.id,\n      label: user.fullName\n    };\n  });\n  const [isOpenEmojiPicker, setIsOpenEmojiPicker] = useState(false);\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n  const onEmojiClick = (event, emojiObject) => {\n    event.preventDefault();\n    setChosenEmoji(emojiObject);\n  };\n\n  const openEmojiPickerHandler = () => setIsOpenEmojiPicker(isOpenEmojiPicker => !isOpenEmojiPicker);\n\n  const createRoom = event => {\n    event.preventDefault();\n    const roomName = document.querySelector('input').value;\n\n    try {\n      const members = selectedOptions.map(member => {\n        return member[0].Id;\n      });\n      console.log(\"SENDING THIS: \", roomName, {\n        Id: currentUser.user.id,\n        FullName: currentUser.user.fullName\n      }, members);\n      createChannelEvent.createChannel(roomName, currentUser.user.id, members);\n      const newChannel = {\n        id: 123132321,\n        name: roomName,\n        icon: \"&#10024;\",\n        members: selectedOptions.map(member => member.Id),\n        messages: [{\n          text: 'Hello',\n          senderId: 1,\n          timestamp: '21:18:53'\n        }, {\n          text: 'Hey',\n          senderId: 2,\n          timestamp: '21:18:54'\n        }, {\n          text: 'Heyo guuuys',\n          senderId: 3,\n          timestamp: '21:18:56'\n        }]\n      };\n      setChannels(channels => [...channels, newChannel]);\n    } catch (err) {\n      console.log(err);\n    }\n\n    ;\n  };\n\n  const handleSelectOptions = e => {\n    setSelectedOptions(selectedOptions => Array.isArray(e) ? e.map(x => [{\n      Id: x.value,\n      FullName: x.label\n    }]) : []);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    setIsPopupOpen: setIsPopupOpen,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-channel-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a public channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fields-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emoji-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"emoji-picker\",\n                onClick: openEmojiPickerHandler,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"emoji-icon\",\n                  children: chosenEmoji == null ? /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n                    value: {\n                      size: 32\n                    },\n                    children: /*#__PURE__*/_jsxDEV(AiOutlineSmile, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 41\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: chosenEmoji.emoji\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 33\n              }, this), isOpenEmojiPicker ? /*#__PURE__*/_jsxDEV(Picker, {\n                onEmojiClick: onEmojiClick\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 54\n              }, this) : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \".room-name\",\n              type: \"text\",\n              maxLength: \"25\",\n              placeholder: \"Enter channel name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            name: \"colors\",\n            options: options,\n            className: \"basic-multi-select\",\n            classNamePrefix: \"select\",\n            onChange: handleSelectOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createRoom,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddChannelPopup, \"X/4se1NG7oPdayBNtI1NG6L++To=\");\n\n_c = AddChannelPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddChannelPopup\");","map":{"version":3,"names":["React","useEffect","useState","AiOutlineSmile","IconContext","Picker","Select","SignalrEvents","Popup","getAllUsers","createChannelEvent","AddChannelPopup","connectionController","currentUser","setChannels","setIsPopupOpen","users","setUsers","then","data","catch","err","console","log","options","filter","user","id","map","value","label","fullName","isOpenEmojiPicker","setIsOpenEmojiPicker","selectedOptions","setSelectedOptions","chosenEmoji","setChosenEmoji","onEmojiClick","event","emojiObject","preventDefault","openEmojiPickerHandler","createRoom","roomName","document","querySelector","members","member","Id","FullName","createChannel","newChannel","name","icon","messages","text","senderId","timestamp","channels","handleSelectOptions","e","Array","isArray","x","size","emoji"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/Popup/AddChannelPopup/AddChannelPopup.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./addchannelpopup.css\";\nimport { AiOutlineSmile } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons/lib\";\nimport Picker from 'emoji-picker-react';\nimport Select from 'react-select';\nimport SignalrEvents from \"../../../api/SignalrEvents\";\nimport Popup from \"../Popup\";\n\nimport { getAllUsers } from \"../../../api/user/user\";\n\nconst createChannelEvent = new SignalrEvents('CreateRoom', 'AddChannel');\n\nexport default function AddChannelPopup({ connectionController, currentUser, setChannels, setIsPopupOpen }){\n\n    const [users, setUsers] = useState([]); \n\n    useEffect(() => {\n        getAllUsers().then(data => {\n            setUsers(data);\n        }).catch(err => console.log(err));\n    }, [])\n\n\n    const options = users.filter(user => user.id !== currentUser.user.id).map(user => {\n        return {value: user.id, label: user.fullName}\n    })\n\n    const [isOpenEmojiPicker, setIsOpenEmojiPicker] = useState(false);\n    const [selectedOptions, setSelectedOptions] = useState([]);\n    const [chosenEmoji, setChosenEmoji] = useState(null);\n    const onEmojiClick = (event, emojiObject) => {\n        event.preventDefault();\n        setChosenEmoji(emojiObject);\n    };\n\n    const openEmojiPickerHandler = () => setIsOpenEmojiPicker(isOpenEmojiPicker => !isOpenEmojiPicker);\n\n    const createRoom = (event) => {\n        event.preventDefault();\n        const roomName = document.querySelector('input').value;\n        try{\n            const members = selectedOptions.map(member => {\n                return member[0].Id;\n            });\n\n            console.log(\"SENDING THIS: \", roomName, {Id:currentUser.user.id, FullName:currentUser.user.fullName}, members);\n\n            createChannelEvent.\n\n            createChannel(roomName, currentUser.user.id, members);\n\n            const newChannel = {\n                id: 123132321,\n                name: roomName,\n                icon: \"&#10024;\",\n                members : selectedOptions.map(member => member.Id),\n                messages : [{\n                        text: 'Hello',\n                        senderId : 1,\n                        timestamp: '21:18:53'\n                    }, \n                    {\n                        text: 'Hey',\n                        senderId: 2,\n                        timestamp: '21:18:54'\n                    },\n                    {\n                        text: 'Heyo guuuys',\n                        senderId: 3,\n                        timestamp: '21:18:56'\n                    }]\n            }\n\n            setChannels(channels => [...channels, newChannel]);\n        } catch(err){\n            console.log(err);\n        };\n\n\n    };\n\n    const handleSelectOptions = (e) => {\n        setSelectedOptions(selectedOptions => Array.isArray(e) ? e.map(x => [{Id:x.value, FullName:x.label}]) : []);\n    }\n\n    return(\n        <Popup setIsPopupOpen={setIsPopupOpen} >\n            <div className=\"add-channel-popup\">\n                <h2>Create a public channel</h2>\n                <form action=\"\">\n                    <div className=\"fields-wrapper\">\n                        <div className=\"form-fields\">\n                            <div className=\"emoji-field\">\n                                <div className=\"emoji-picker\" onClick={openEmojiPickerHandler}>\n                                    <div className=\"emoji-icon\">\n                                        {chosenEmoji == null ?\n                                        <IconContext.Provider value={{size:32}}>\n                                            <AiOutlineSmile/>\n                                        </IconContext.Provider>\n                                        : <p>{chosenEmoji.emoji}</p>}\n                                    </div>\n                                </div>\n                                {isOpenEmojiPicker ? <Picker onEmojiClick={onEmojiClick}/> : \"\"}\n                            </div>\n                            <input className=\".room-name\" type=\"text\" maxLength=\"25\" placeholder=\"Enter channel name\"/>\n                        </div>\n                        <Select\n                        isMulti\n                        name=\"colors\"\n                        options={options}\n                        className=\"basic-multi-select\"\n                        classNamePrefix=\"select\"\n                        onChange={handleSelectOptions}\n                        />\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <button onClick={createRoom}>Next</button>\n                    </div>\n                </form>\n            </div>\n        </Popup>    \n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}