{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/menu/TeamChat.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport './teamchat.css';\nimport { users } from \"../../api/data/users\";\nimport PrivateChat from \"../channel/PrivateChat\";\nimport Channel from \"../channel/publicChannel/Channel\";\nimport PanelHeader from \"../panelheader/PanelHeader\";\nimport AddChannelPopup from \"../Popup/AddChannelPopup/AddChannelPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TeamChat(_ref) {\n  _s();\n\n  let {\n    connection,\n    channels,\n    setChannels,\n    selectedChannel,\n    setSelectedChannel,\n    currentUser\n  } = _ref;\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  function PopupOpen() {\n    setIsPopupOpen(true);\n  }\n\n  const publicChannels = channels.filter(channel => channel.name !== \"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-intro\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Team chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"public-channel-panel\",\n      children: /*#__PURE__*/_jsxDEV(PanelHeader, {\n        title: \"Public Channels\",\n        count: publicChannels.length,\n        panelWrapperClass: \".channels-wrapper\",\n        onAddClick: PopupOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"channels-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"channels\",\n        children: publicChannels.map(channel => {\n          return channel.name !== \"\" ? /*#__PURE__*/_jsxDEV(Channel, {\n            channel: channel,\n            selectedChannel: selectedChannel,\n            selected: channel.id === selectedChannel.id,\n            setSelectedChannel: setSelectedChannel\n          }, channel.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this) : \"\";\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PrivateChat, {\n      currentUser: currentUser,\n      channels: channels,\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 14\n    }, this), isPopupOpen ? /*#__PURE__*/_jsxDEV(AddChannelPopup, {\n      connection: connection,\n      currentUser: currentUser,\n      setChannels: setChannels,\n      setIsPopupOpen: setIsPopupOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TeamChat, \"vFErrUU1qYQoaBmFpaEBY5pk8jE=\");\n\n_c = TeamChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"TeamChat\");","map":{"version":3,"names":["React","useState","users","PrivateChat","Channel","PanelHeader","AddChannelPopup","TeamChat","connection","channels","setChannels","selectedChannel","setSelectedChannel","currentUser","isPopupOpen","setIsPopupOpen","PopupOpen","publicChannels","filter","channel","name","length","map","id"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/menu/TeamChat.jsx"],"sourcesContent":["import { React, useState } from \"react\";\n\nimport './teamchat.css';\n\nimport { users } from \"../../api/data/users\";\n\nimport PrivateChat from \"../channel/PrivateChat\";\nimport Channel from \"../channel/publicChannel/Channel\";\nimport PanelHeader from \"../panelheader/PanelHeader\";\nimport AddChannelPopup from \"../Popup/AddChannelPopup/AddChannelPopup\";\n\n\n\nexport default function TeamChat( { connection, channels, setChannels, selectedChannel, setSelectedChannel, currentUser } ) {\n\n    const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n    function PopupOpen(){\n        setIsPopupOpen(true);\n    }\n\n    const publicChannels = channels.filter(channel => channel.name !== \"\");\n\n    return (\n        <div className=\"team-chat\">\n            <div className=\"chat-intro\">\n                <h1>Team chat</h1>\n            </div>\n            <div className=\"public-channel-panel\">\n                <PanelHeader \n                title={\"Public Channels\"} \n                count={publicChannels.length} \n                panelWrapperClass={\".channels-wrapper\"} \n                onAddClick={PopupOpen}/>\n            </div>\n            <div className=\"channels-wrapper\">\n                <div className=\"channels\">\n                    {publicChannels.map((channel) => {\n                        return channel.name !== \"\" ? \n                        <Channel key={channel.id}\n                        channel={channel}\n                        selectedChannel={selectedChannel}\n                        selected={channel.id === selectedChannel.id}\n                        setSelectedChannel={setSelectedChannel}\n                        /> : \"\";\n                    })}\n                </div>\n            </div>\n            {<PrivateChat \n            currentUser={currentUser} \n            channels={channels} \n            selectedChannel={selectedChannel}\n            setSelectedChannel={setSelectedChannel}/>}\n\n            {isPopupOpen ?\n                <AddChannelPopup\n                connection={connection} \n                currentUser={currentUser}\n                setChannels={setChannels}\n                setIsPopupOpen={setIsPopupOpen}/>\n            : \"\"}\n\n        </div>\n    )\n    \n}"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,gBAAP;AAEA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;;AAIA,eAAe,SAASC,QAAT,OAA6G;EAAA;;EAAA,IAA1F;IAAEC,UAAF;IAAcC,QAAd;IAAwBC,WAAxB;IAAqCC,eAArC;IAAsDC,kBAAtD;IAA0EC;EAA1E,CAA0F;EAExH,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;;EAEA,SAASe,SAAT,GAAoB;IAChBD,cAAc,CAAC,IAAD,CAAd;EACH;;EAED,MAAME,cAAc,GAAGR,QAAQ,CAACS,MAAT,CAAgBC,OAAO,IAAIA,OAAO,CAACC,IAAR,KAAiB,EAA5C,CAAvB;EAEA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,wBACI;MAAK,SAAS,EAAC,YAAf;MAAA,uBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAC,sBAAf;MAAA,uBACI,QAAC,WAAD;QACA,KAAK,EAAE,iBADP;QAEA,KAAK,EAAEH,cAAc,CAACI,MAFtB;QAGA,iBAAiB,EAAE,mBAHnB;QAIA,UAAU,EAAEL;MAJZ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAJJ,eAWI;MAAK,SAAS,EAAC,kBAAf;MAAA,uBACI;QAAK,SAAS,EAAC,UAAf;QAAA,UACKC,cAAc,CAACK,GAAf,CAAoBH,OAAD,IAAa;UAC7B,OAAOA,OAAO,CAACC,IAAR,KAAiB,EAAjB,gBACP,QAAC,OAAD;YACA,OAAO,EAAED,OADT;YAEA,eAAe,EAAER,eAFjB;YAGA,QAAQ,EAAEQ,OAAO,CAACI,EAAR,KAAeZ,eAAe,CAACY,EAHzC;YAIA,kBAAkB,EAAEX;UAJpB,GAAcO,OAAO,CAACI,EAAtB;YAAA;YAAA;YAAA;UAAA,QADO,GAMF,EANL;QAOH,CARA;MADL;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAXJ,eAwBK,QAAC,WAAD;MACD,WAAW,EAAEV,WADZ;MAED,QAAQ,EAAEJ,QAFT;MAGD,eAAe,EAAEE,eAHhB;MAID,kBAAkB,EAAEC;IAJnB;MAAA;MAAA;MAAA;IAAA,QAxBL,EA8BKE,WAAW,gBACR,QAAC,eAAD;MACA,UAAU,EAAEN,UADZ;MAEA,WAAW,EAAEK,WAFb;MAGA,WAAW,EAAEH,WAHb;MAIA,cAAc,EAAEK;IAJhB;MAAA;MAAA;MAAA;IAAA,QADQ,GAMV,EApCN;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA0CH;;GApDuBR,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}