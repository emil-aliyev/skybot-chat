{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport \"./app.css\";\nimport { getChannels, getUsers, getUserChannel } from \"./api/logic/getters\";\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport ChatPage from \"./components/page/ChatPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [currentUser, setCurrentUser] = useState(getUsers[0])\n  const [currentUser, setCurrentUser] = useState(); // const [channels, setChannels] = useState(getUserChannel(currentUser.id, getChannels()));\n\n  const [channels, setChannels] = useState();\n  const [users, setUsers] = useState(); // const [users, setUsers] = useState(getUsers());\n\n  const [selectedChannel, setSelectedChannel] = useState();\n  const [connection, setConnection] = useState(); // useEffect(() => {\n  //     // declare the data fetching function\n  //     const connect = async () => {\n  //         try {\n  //             const connection = new HubConnectionBuilder()\n  //             .withUrl(\"https://57d5-185-129-94-115.eu.ngrok.io/chatHub\")\n  //             .configureLogging(LogLevel.Information)\n  //             .build();\n  //             console.log(\"SignalR Connected.\");\n  //             connection.on(\"AddChannel\", (channel) => console.log(channel));\n  //             connection.on(\"onError\", (msg) => console.log(msg));\n  //             connection.on(\"RecieveMessage\", (message) => {\n  //                 console.log(message);\n  //             });\n  //             connection.onclose(e => {\n  //                 setConnection();\n  //             });\n  //             await connection.start();\n  //             setConnection(connection);\n  //         } catch (err) {\n  //             console.log(err);\n  //         };\n  //     };\n  //     // call the function\n  //     connect()\n  //       // make sure to catch any error\n  //       .catch(console.error);\n  //   }, [])\n  // const createChannel = async (channel, user) => {\n  //     try {\n  //         await connection.invoke(\"CreateRoom\", channel, user);\n  //     } catch (err) {\n  //         console.log(err);\n  //     }\n  // }\n  // const sendMessage = async (channel, user, message) => {\n  //     try {\n  //       await connection.invoke(\"SendToRoom\", channel, user, message);\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  // }    \n  // const recieveMessage = async (channel, message) => {\n  //     try {\n  //     } catch (err) {\n  //       console.log(err);\n  //     }\n  //   }    \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: Object.keys(currentUser).length !== 0 ? /*#__PURE__*/_jsxDEV(ChatPage, {\n      currentUser: currentUser,\n      channels: channels,\n      setChannels: setChannels,\n      users: users,\n      setUsers: setUsers,\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      createChannel: createChannel,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this) : \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"kBU3mokNUZCbbAApKUJtMGjoHVM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getChannels","getUsers","getUserChannel","HubConnectionBuilder","LogLevel","ChatPage","App","currentUser","setCurrentUser","channels","setChannels","users","setUsers","selectedChannel","setSelectedChannel","connection","setConnection","Object","keys","length","createChannel","sendMessage"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/App.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport \"./app.css\";\n\nimport { getChannels, getUsers, getUserChannel } from \"./api/logic/getters\";\n\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport ChatPage from \"./components/page/ChatPage\";\n\n\nfunction App() {\n\n    // const [currentUser, setCurrentUser] = useState(getUsers[0])\n    const [currentUser, setCurrentUser] = useState();\n    \n    // const [channels, setChannels] = useState(getUserChannel(currentUser.id, getChannels()));\n    const [channels, setChannels] = useState();\n    const [users, setUsers] = useState();\n    // const [users, setUsers] = useState(getUsers());\n    const [selectedChannel, setSelectedChannel] = useState();    \n\n    const [connection, setConnection] = useState();\n    \n    // useEffect(() => {\n    //     // declare the data fetching function\n    //     const connect = async () => {\n    //         try {\n    //             const connection = new HubConnectionBuilder()\n    //             .withUrl(\"https://57d5-185-129-94-115.eu.ngrok.io/chatHub\")\n    //             .configureLogging(LogLevel.Information)\n    //             .build();\n    \n    //             console.log(\"SignalR Connected.\");\n    \n    //             connection.on(\"AddChannel\", (channel) => console.log(channel));\n    \n    //             connection.on(\"onError\", (msg) => console.log(msg));\n\n    //             connection.on(\"RecieveMessage\", (message) => {\n    //                 console.log(message);\n    //             });\n\n    //             connection.onclose(e => {\n    //                 setConnection();\n    //             });\n                \n    //             await connection.start();\n    //             setConnection(connection);\n    //         } catch (err) {\n    //             console.log(err);\n    //         };\n    //     };\n      \n    //     // call the function\n    //     connect()\n    //       // make sure to catch any error\n    //       .catch(console.error);\n    //   }, [])\n\n    // const createChannel = async (channel, user) => {\n    //     try {\n    //         await connection.invoke(\"CreateRoom\", channel, user);\n    //     } catch (err) {\n    //         console.log(err);\n    //     }\n    // }\n\n    // const sendMessage = async (channel, user, message) => {\n    //     try {\n    //       await connection.invoke(\"SendToRoom\", channel, user, message);\n    //     } catch (err) {\n    //       console.log(err);\n    //     }\n    // }    \n\n    // const recieveMessage = async (channel, message) => {\n    //     try {\n          \n    //     } catch (err) {\n    //       console.log(err);\n    //     }\n    //   }    \n\n    return(\n        <div className=\"page\">\n\n\n            {Object.keys(currentUser).length !== 0 ?\n            <ChatPage\n            currentUser={currentUser}\n            channels={channels}\n            setChannels={setChannels}\n            users={users}\n            setUsers={setUsers}\n            selectedChannel={selectedChannel}\n            setSelectedChannel={setSelectedChannel}\n            createChannel={createChannel} \n            sendMessage={sendMessage}/>\n            : \"\"}\n        </div>\n    )\n}\n\nexport default App;"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,cAAhC,QAAsD,qBAAtD;AAEA,SAASC,oBAAT,EAA+BC,QAA/B,QAA+C,oBAA/C;AACA,OAAOC,QAAP,MAAqB,4BAArB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEX;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,EAA9C,CAHW,CAKX;;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,EAAxC;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,EAAlC,CAPW,CAQX;;EACA,MAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,EAAtD;EAEA,MAAM,CAACiB,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,EAA5C,CAXW,CAaX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EAEA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;;EAEA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,UAGKmB,MAAM,CAACC,IAAP,CAAYX,WAAZ,EAAyBY,MAAzB,KAAoC,CAApC,gBACD,QAAC,QAAD;MACA,WAAW,EAAEZ,WADb;MAEA,QAAQ,EAAEE,QAFV;MAGA,WAAW,EAAEC,WAHb;MAIA,KAAK,EAAEC,KAJP;MAKA,QAAQ,EAAEC,QALV;MAMA,eAAe,EAAEC,eANjB;MAOA,kBAAkB,EAAEC,kBAPpB;MAQA,aAAa,EAAEM,aARf;MASA,WAAW,EAAEC;IATb;MAAA;MAAA;MAAA;IAAA,QADC,GAWC;EAdN;IAAA;IAAA;IAAA;EAAA,QADJ;AAkBH;;GA3FQf,G;;KAAAA,G;AA6FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}