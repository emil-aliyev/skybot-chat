{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport \"./app.css\";\nimport { getUsers } from \"./api/logic/getters\";\nimport ChatPage from \"./components/page/ChatPage\";\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nconst URL = \"https://7def-185-129-94-115.eu.ngrok.io\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({}); // const currentUser = getUsers()[0]; \n\n  const [channels, setChannels] = useState([]);\n  const [connection, setConnection] = useState();\n  console.log(\"Current user: \", currentUser);\n  useEffect(() => {\n    // declare the data fetching function\n    const connect = async () => {\n      try {\n        const connection = new HubConnectionBuilder().withUrl(`${URL}/chatHub`).configureLogging(LogLevel.Information).build();\n        console.log(\"SignalR Connected.\");\n        connection.on(\"AddChannel\", channel => console.log(channel));\n        connection.on(\"onError\", msg => console.log(msg));\n        connection.on(\"RecieveMessage\", message => {\n          console.log(\"RECIEVING MESSAGE: \", message, \"\\nCURRENT USER:\", currentUser);\n          const copyChannel = Object.assign({}, currentUser.roomExistUsers.filter(room => room.id === message.toRoomId)[0]);\n\n          if (copyChannel.messages !== null) {\n            copyChannel.messages.push(message);\n          } else {\n            copyChannel.messages = [message];\n          }\n\n          setChannels(channels => {\n            channels.map(channel => {\n              if (channel.id !== copyChannel.id) {\n                return channel;\n              } else {\n                return copyChannel;\n              }\n            });\n          });\n        });\n        connection.onclose(e => {\n          setConnection();\n        });\n        await connection.start();\n        setConnection(connection);\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    }; // call the function\n\n\n    connect() // make sure to catch any error\n    .catch(console.error);\n  }, []);\n\n  const createChannel = async (channel, user, members) => {\n    try {\n      await connection.invoke(\"CreateRoom\", channel, user, members);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sendMessage = async (channel, user, message) => {\n    try {\n      await connection.invoke(\"SendToRoom\", channel, user, message);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getAllUsers = async () => {\n    try {\n      const data = await connection.invoke(\"GetAllUsers\");\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const loginHandler = async () => {\n    const id = parseInt(document.querySelector(\"input\").value); // const user = await connection.invoke(\"GetUser\", id);\n    // console.log(\"current user:\", user);\n    // setCurrentUser(currentUser => user);\n    // setCurrentUser(currentUser => getUsers()[id-1]);\n\n    axios.get(`${URL}/api/getuser/${id}`).then(resp => {\n      console.log(\"resp:\", resp.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: Object.keys(currentUser).length !== 0 ? /*#__PURE__*/_jsxDEV(ChatPage, {\n      currentUser: currentUser,\n      createChannel: createChannel,\n      sendMessage: sendMessage,\n      getAllUsers: getAllUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loginHandler,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"iFVaLEDWqUYARWfO4pGPQdbgCiA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","getUsers","ChatPage","HubConnectionBuilder","LogLevel","axios","require","URL","App","currentUser","setCurrentUser","channels","setChannels","connection","setConnection","console","log","connect","withUrl","configureLogging","Information","build","on","channel","msg","message","copyChannel","Object","assign","roomExistUsers","filter","room","id","toRoomId","messages","push","map","onclose","e","start","err","catch","error","createChannel","user","members","invoke","sendMessage","getAllUsers","data","loginHandler","parseInt","document","querySelector","value","get","then","resp","keys","length"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/App.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport \"./app.css\";\n\nimport { getUsers } from \"./api/logic/getters\";\n\nimport ChatPage from \"./components/page/ChatPage\";\n\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\n\nconst axios = require('axios');\n\nconst URL = \"https://7def-185-129-94-115.eu.ngrok.io\"\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({});\n    // const currentUser = getUsers()[0]; \n    const [channels, setChannels] = useState([]);\n    const [connection, setConnection] = useState();\n    \n    console.log(\"Current user: \", currentUser);\n\n    useEffect(() => {\n        // declare the data fetching function\n        const connect = async () => {\n            try {\n                const connection = new HubConnectionBuilder()\n                .withUrl(`${URL}/chatHub`)\n                .configureLogging(LogLevel.Information)\n                .build();\n    \n                console.log(\"SignalR Connected.\");\n    \n                connection.on(\"AddChannel\", (channel) => console.log(channel));\n    \n                connection.on(\"onError\", (msg) => console.log(msg));\n\n                connection.on(\"RecieveMessage\", (message) => {\n                    console.log(\"RECIEVING MESSAGE: \", message, \"\\nCURRENT USER:\", currentUser);\n                    const copyChannel = Object.assign({}, currentUser.roomExistUsers.filter(room => room.id === message.toRoomId)[0]);\n                    if (copyChannel.messages !== null){\n                        copyChannel.messages.push(message);\n                    } else {\n                        copyChannel.messages = [message];\n                    }\n\n                    setChannels(channels => {\n                        channels.map(channel => {\n                            if (channel.id !== copyChannel.id){\n                                return channel;\n                            } else {\n                                return copyChannel;\n                            }\n                        })\n                    });\n                });\n\n                connection.onclose(e => {\n                    setConnection();\n                });\n                \n                await connection.start();\n                setConnection(connection);\n            } catch (err) {\n                console.log(err);\n            };\n        };\n      \n        // call the function\n        connect()\n          // make sure to catch any error\n          .catch(console.error);\n      }, [])\n\n    const createChannel = async (channel, user, members) => {\n        try {\n            await connection.invoke(\"CreateRoom\", channel, user, members);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const sendMessage = async (channel, user, message) => {\n        try {\n          await connection.invoke(\"SendToRoom\", channel, user, message);\n        } catch (err) {\n          console.log(err);\n        }\n    }    \n\n    const getAllUsers = async () => {\n        try {\n            const data = await connection.invoke(\"GetAllUsers\");\n            return data;\n        } catch (err) {\n            console.log(err);\n        }\n    }\n      \n    const loginHandler = async () => {\n        const id = parseInt(document.querySelector(\"input\").value);\n        // const user = await connection.invoke(\"GetUser\", id);\n        // console.log(\"current user:\", user);\n        // setCurrentUser(currentUser => user);\n        // setCurrentUser(currentUser => getUsers()[id-1]);\n        axios.get(`${URL}/api/getuser/${id}`).then(resp => {\n            console.log(\"resp:\", resp.data);\n        });\n    }\n\n    return(\n        <div className=\"page\">\n            {Object.keys(currentUser).length !== 0 ?\n            <ChatPage \n            currentUser={currentUser}\n            createChannel={createChannel} \n            sendMessage={sendMessage}\n            getAllUsers={getAllUsers}/>\n            :\n            <div className=\"login\">\n                <input/>\n                <button onClick={loginHandler}>Login</button>\n            </div>}\n        </div>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}