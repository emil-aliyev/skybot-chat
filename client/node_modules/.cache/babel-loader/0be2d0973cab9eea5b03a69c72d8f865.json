{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/page/ChatPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport Sidebar from \"../sidebar/Sidebar\";\nimport ChatLobby from '../lobby/ChatLobby';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://3926-185-129-94-115.eu.ngrok.io\";\nexport default function ChatPage(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [channels, setChannels] = useState(currentUser.roomExistUsers);\n  const [selectedChannel, setSelectedChannel] = useState({});\n  const [connection, setConnection] = useState();\n  useEffect(() => {\n    const connect = async () => {\n      try {\n        const connection = new HubConnectionBuilder().withUrl(`${URL}/chatHub`).configureLogging(LogLevel.Information).withAutomaticReconnect().build();\n        connection.on(\"AddChannel\", channel => console.log(channel));\n        connection.on(\"onError\", msg => console.log(msg));\n        connection.on(\"RecieveMessage\", message => {\n          console.log(\"New message: \", message);\n          console.log(\"After new mssage: \", channels);\n          const copyChannel = { ...channels.filter(room => room.id === message.toRoomId)[0]\n          };\n\n          if (copyChannel.messages !== null) {\n            copyChannel.messages.push(message);\n          } else {\n            copyChannel.messages = [message];\n          }\n\n          const newChannels = channels.map(channel => {\n            if (channel.id !== copyChannel.id) {\n              return channel;\n            } else {\n              return copyChannel;\n            }\n          });\n          setChannels(channels => newChannels);\n        });\n        connection.onclose(e => {\n          setConnection();\n        });\n        await connection.start();\n        setConnection(connection);\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    };\n\n    connect().catch(console.error);\n  }, []);\n\n  const createChannel = async (channel, user, members) => {\n    try {\n      const room = await connection.invoke(\"CreateRoom\", channel, user, members);\n      console.log(\"New room: \", room);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sendMessage = async (channel, user, message) => {\n    try {\n      await connection.invoke(\"SendToRoom\", channel, user, message);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const getAllUsers = async () => {\n    try {\n      const data = await connection.invoke(\"GetAllUsers\");\n      return data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatLobby, {\n      currentUser: currentUser,\n      channels: channels,\n      setChannels: setChannels // users={users}\n      // setUsers={setUsers}\n      ,\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      createChannel: createChannel,\n      sendMessage: sendMessage,\n      getAllUsers: getAllUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatPage, \"CesSjSxVGwvNMa15PGjGlSE7pio=\");\n\n_c = ChatPage;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","HubConnectionBuilder","LogLevel","Sidebar","ChatLobby","URL","ChatPage","currentUser","channels","setChannels","roomExistUsers","selectedChannel","setSelectedChannel","connection","setConnection","connect","withUrl","configureLogging","Information","withAutomaticReconnect","build","on","channel","console","log","msg","message","copyChannel","filter","room","id","toRoomId","messages","push","newChannels","map","onclose","e","start","err","catch","error","createChannel","user","members","invoke","sendMessage","getAllUsers","data"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/page/ChatPage.jsx"],"sourcesContent":["import React, { useState, useEffect} from \"react\";\n\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\n\nimport Sidebar from \"../sidebar/Sidebar\";\nimport ChatLobby from '../lobby/ChatLobby';\n\nconst URL = \"https://3926-185-129-94-115.eu.ngrok.io\";\n\nexport default function ChatPage({ currentUser }){\n\n    const [channels, setChannels] = useState(currentUser.roomExistUsers);\n    const [selectedChannel, setSelectedChannel] = useState({});   \n    const [connection, setConnection] = useState();\n\n\n    useEffect(() => {\n        const connect = async () => {\n            try {\n                const connection = new HubConnectionBuilder()\n                .withUrl(`${URL}/chatHub`)\n                .configureLogging(LogLevel.Information)\n                .withAutomaticReconnect()\n                .build();\n\n    \n                connection.on(\"AddChannel\", (channel) => console.log(channel));\n    \n                connection.on(\"onError\", (msg) => console.log(msg));\n\n                connection.on(\"RecieveMessage\", (message) => {\n                    console.log(\"New message: \", message);\n                    console.log(\"After new mssage: \", channels);\n                    const copyChannel = {...channels.filter(room => room.id === message.toRoomId)[0]}\n                    if (copyChannel.messages !== null){\n                        copyChannel.messages.push(message);\n                    } else {\n                        copyChannel.messages = [message];\n                    }\n                    \n                    const newChannels = channels.map(channel => {\n                        if (channel.id !== copyChannel.id){\n                            return channel;\n                        } else {\n                            return copyChannel;\n                        }\n                    });\n                    setChannels(channels => newChannels);\n                });\n\n                connection.onclose(e => {\n                    setConnection();\n                });\n                \n                await connection.start();\n                setConnection(connection);\n            } catch (err) {\n                console.log(err);\n            };\n        };\n      \n        connect().catch(console.error);\n      }, [])\n\n    const createChannel = async (channel, user, members) => {\n        try {\n            const room = await connection.invoke(\"CreateRoom\", channel, user, members);\n            console.log(\"New room: \", room);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const sendMessage = async (channel, user, message) => {\n        try {\n          await connection.invoke(\"SendToRoom\", channel, user, message);\n        } catch (err) {\n          console.log(err);\n        }\n    }    \n\n    const getAllUsers = async () => {\n        try {\n            const data = await connection.invoke(\"GetAllUsers\");\n            return data;\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return(\n        <div className=\"page\">\n            <Sidebar/>\n            <ChatLobby \n            currentUser={currentUser}\n            channels={channels}\n            setChannels={setChannels}\n            // users={users}\n            // setUsers={setUsers}\n            selectedChannel={selectedChannel}\n            setSelectedChannel={setSelectedChannel}\n            createChannel={createChannel} \n            sendMessage={sendMessage}\n            getAllUsers={getAllUsers}/>\n        </div>\n    );\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}