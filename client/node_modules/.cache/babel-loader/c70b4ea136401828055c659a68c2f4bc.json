{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/menu/ChatMenu.jsx\";\nimport React, { useState } from \"react\";\nimport { AiOutlineFileText, AiOutlineSmile, AiOutlineStar, AiOutlineUserAdd } from \"react-icons/ai\";\nimport { getOtherUserInfo } from \"../../api/logic/getters\";\nimport Message from \"../message/Message\";\nimport \"./chatmenu.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMenu(_ref) {\n  var _this = this;\n\n  let {\n    sendMessage,\n    selectedChannel,\n    setSelectedChannel,\n    currentUser,\n    isPrivate\n  } = _ref;\n  return function (sendMessage) {\n    // const [messages, setMessages] = useState(selectedChannel.messages);\n    async function sendMessage() {\n      const text = document.querySelector(\"#message-area\").value;\n\n      if (text !== \"\") {\n        const currentDate = new Date();\n        const timestamp = `${currentDate.getHours()}:${currentDate.getMinutes()}:${currentDate.getSeconds()}`;\n        document.querySelector(\"#message-area\").value = \"\";\n        setSelectedChannel(selectedChannel => {\n          const copyChannel = Object.assign({}, selectedChannel);\n          copyChannel.messages = [...[{\n            text: text,\n            senderId: currentUser.id,\n            timestamp: timestamp\n          }], ...copyChannel.messages];\n          return copyChannel;\n        });\n        sendMessage(selectedChannel.name, text); // try {\n        //     await connection.invoke(\"SendToRoom\", selectedChannel.name, text);\n        // } catch (err) {\n        //     console.error(err);\n        // }\n      }\n    }\n\n    async function receiveMessage(message) {\n      console.log(message);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: isPrivate ? getOtherUserInfo(selectedChannel, currentUser.id).name : selectedChannel.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages\",\n          children: selectedChannel.messages.map(message => {\n            return /*#__PURE__*/_jsxDEV(Message, {\n              message: message,\n              currentUser: currentUser\n            }, Math.random() * 100, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messenger\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            id: \"message-area\",\n            cols: \"30\",\n            rows: \"1\",\n            placeholder: \"Type your message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-tools\",\n              children: [/*#__PURE__*/_jsxDEV(AiOutlineFileText, {\n                size: 20,\n                color: \"#6A7681\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(AiOutlineUserAdd, {\n                size: 20,\n                color: \"#6A7681\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 29\n              }, _this), /*#__PURE__*/_jsxDEV(AiOutlineSmile, {\n                size: 20,\n                color: \"#6A7681\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 29\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: sendMessage,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, _this);\n  }(sendMessage);\n}\n_c = ChatMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMenu\");","map":{"version":3,"names":["React","useState","AiOutlineFileText","AiOutlineSmile","AiOutlineStar","AiOutlineUserAdd","getOtherUserInfo","Message","ChatMenu","sendMessage","selectedChannel","setSelectedChannel","currentUser","isPrivate","text","document","querySelector","value","currentDate","Date","timestamp","getHours","getMinutes","getSeconds","copyChannel","Object","assign","messages","senderId","id","name","receiveMessage","message","console","log","map","Math","random"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/menu/ChatMenu.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { AiOutlineFileText, AiOutlineSmile, AiOutlineStar, AiOutlineUserAdd } from \"react-icons/ai\";\nimport { getOtherUserInfo } from \"../../api/logic/getters\";\nimport Message from \"../message/Message\";\nimport \"./chatmenu.css\";\n\nexport default function ChatMenu({ sendMessage, selectedChannel, setSelectedChannel, currentUser, isPrivate }) {\n\n    // const [messages, setMessages] = useState(selectedChannel.messages);\n\n    async function sendMessage(){\n        const text = document.querySelector(\"#message-area\").value;\n        \n        if(text !== \"\"){\n            const currentDate = new Date();\n            const timestamp = `${currentDate.getHours()}:${currentDate.getMinutes()}:${currentDate.getSeconds()}`;\n            \n            document.querySelector(\"#message-area\").value = \"\";\n            setSelectedChannel(selectedChannel => {\n                const copyChannel = Object.assign({}, selectedChannel);\n                copyChannel.messages = [...[{text: text, senderId: currentUser.id, timestamp:timestamp}], ...copyChannel.messages];\n                return copyChannel;    \n            });\n            \n            sendMessage(selectedChannel.name, text);\n            // try {\n            //     await connection.invoke(\"SendToRoom\", selectedChannel.name, text);\n            // } catch (err) {\n            //     console.error(err);\n            // }\n        }\n    }\n\n    async function receiveMessage(message){\n        console.log(message);\n    }\n\n    return(\n        <div className=\"chat-menu\">\n            <header>\n                <h1>{ isPrivate ? getOtherUserInfo(selectedChannel, currentUser.id).name : selectedChannel.name}</h1>\n            </header>\n            <div className=\"chat-field\">\n                <div className=\"messages\">\n                        {selectedChannel.messages.map((message) => {\n                            return (\n                                <Message key={Math.random()*100} message={message} currentUser={currentUser} />\n                            )\n                        })}\n                </div>\n                <div className=\"messenger\">\n                    <textarea name=\"message\" id=\"message-area\" cols=\"30\" rows=\"1\" placeholder=\"Type your message\"></textarea>\n                    <div className=\"message-panel\">\n                        <div className=\"message-tools\">\n                            <AiOutlineFileText size={20} color=\"#6A7681\"></AiOutlineFileText>\n                            <AiOutlineUserAdd size={20} color=\"#6A7681\"></AiOutlineUserAdd>\n                            <AiOutlineSmile size={20} color=\"#6A7681\"></AiOutlineSmile>\n                        </div>\n                        <button onClick={sendMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n   )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}