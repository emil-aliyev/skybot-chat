{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/lobby/ChatLobby.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { getChannels, getUsers, getUserChannel, getOtherUserInfo } from '../../api/logic/getters';\nimport ChannelDescription from '../channel/channelDescription/ChannelDescription';\nimport ChatMenu from '../menu/ChatMenu';\nimport TeamChat from '../menu/TeamChat';\nimport './chatlobby.css';\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatLobby() {\n  _s();\n\n  const connection = new HubConnectionBuilder().withUrl(\"https://57d5-185-129-94-115.eu.ngrok.io/chatHub\").configureLogging(LogLevel.Information).build();\n\n  async function start() {\n    try {\n      await connection.start();\n      console.log(\"SignalR Connected.\");\n      connection.on(\"AddChannel\", roomVm => console.log(roomVm));\n      connection.onclose(async () => {\n        await start();\n      });\n    } catch (err) {\n      console.log(err);\n      setTimeout(start, 5000);\n    }\n  }\n\n  ;\n  useEffect(async () => start(), []);\n  const currentUser = getUsers()[0];\n  const [channels, setChannels] = useState(getUserChannel(currentUser.id, getChannels()));\n  const [users, setUsers] = useState(getUsers());\n  const [selectedChannel, setSelectedChannel] = useState({});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-lobby\",\n    children: [/*#__PURE__*/_jsxDEV(TeamChat, {\n      connection: connection,\n      channels: channels,\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), Object.keys(selectedChannel).length !== 0 ? /*#__PURE__*/_jsxDEV(ChatMenu, {\n      connection: connection,\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      currentUser: currentUser,\n      isPrivate: selectedChannel.name === \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this) : \"\", Object.keys(selectedChannel).length !== 0 ? /*#__PURE__*/_jsxDEV(ChannelDescription, {\n      selectedChannel: selectedChannel,\n      setSelectedChannel: setSelectedChannel,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatLobby, \"IiYl0W0qYL7TD+VBev2NISzTBCU=\");\n\n_c = ChatLobby;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatLobby\");","map":{"version":3,"names":["React","useEffect","useState","getChannels","getUsers","getUserChannel","getOtherUserInfo","ChannelDescription","ChatMenu","TeamChat","HubConnectionBuilder","LogLevel","ChatLobby","connection","withUrl","configureLogging","Information","build","start","console","log","on","roomVm","onclose","err","setTimeout","currentUser","channels","setChannels","id","users","setUsers","selectedChannel","setSelectedChannel","Object","keys","length","name"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/lobby/ChatLobby.jsx"],"sourcesContent":["import { React, useEffect, useState } from 'react';\nimport { getChannels, getUsers, getUserChannel, getOtherUserInfo } from '../../api/logic/getters';\nimport ChannelDescription from '../channel/channelDescription/ChannelDescription';\nimport ChatMenu from '../menu/ChatMenu';\nimport TeamChat from '../menu/TeamChat';\nimport './chatlobby.css';\n\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\n\nexport default function ChatLobby() {\n\n    const connection = new HubConnectionBuilder()\n    .withUrl(\"https://57d5-185-129-94-115.eu.ngrok.io/chatHub\")\n    .configureLogging(LogLevel.Information)\n    .build();\n\n    async function start() {\n        try {\n            await connection.start();\n            console.log(\"SignalR Connected.\");\n            \n            connection.on(\"AddChannel\", (roomVm) => console.log(roomVm));\n            \n            connection.onclose(async () => {\n                await start();\n            })\n\n        } catch (err) {\n            console.log(err);\n            setTimeout(start, 5000);\n        }\n    };\n\n    useEffect(async () => start(), [])\n        \n    const currentUser = getUsers()[0];\n    \n    const [channels, setChannels] = useState(getUserChannel(currentUser.id, getChannels()));\n    const [users, setUsers] = useState(getUsers());\n    const [selectedChannel, setSelectedChannel] = useState({});    \n\n    return(\n        <div className=\"chat-lobby\">\n            <TeamChat \n            connection={connection}\n            channels={channels}\n            selectedChannel={selectedChannel}\n            setSelectedChannel={setSelectedChannel}\n            currentUser={currentUser}\n            />\n            {Object.keys(selectedChannel).length !== 0 ? \n            <ChatMenu \n            connection={connection}\n            selectedChannel={selectedChannel} \n            setSelectedChannel={setSelectedChannel} \n            currentUser={currentUser} \n            isPrivate={selectedChannel.name === \"\"}/> :\n            \"\"}\n            {Object.keys(selectedChannel).length !== 0 ? \n            <ChannelDescription \n            selectedChannel={selectedChannel}\n            setSelectedChannel={setSelectedChannel}\n            currentUser={currentUser}/> :\n            \"\"}\n        </div>\n    )\n}"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,cAAhC,EAAgDC,gBAAhD,QAAwE,yBAAxE;AACA,OAAOC,kBAAP,MAA+B,kDAA/B;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,iBAAP;AAEA,SAASC,oBAAT,EAA+BC,QAA/B,QAA+C,oBAA/C;;AAEA,eAAe,SAASC,SAAT,GAAqB;EAAA;;EAEhC,MAAMC,UAAU,GAAG,IAAIH,oBAAJ,GAClBI,OADkB,CACV,iDADU,EAElBC,gBAFkB,CAEDJ,QAAQ,CAACK,WAFR,EAGlBC,KAHkB,EAAnB;;EAKA,eAAeC,KAAf,GAAuB;IACnB,IAAI;MACA,MAAML,UAAU,CAACK,KAAX,EAAN;MACAC,OAAO,CAACC,GAAR,CAAY,oBAAZ;MAEAP,UAAU,CAACQ,EAAX,CAAc,YAAd,EAA6BC,MAAD,IAAYH,OAAO,CAACC,GAAR,CAAYE,MAAZ,CAAxC;MAEAT,UAAU,CAACU,OAAX,CAAmB,YAAY;QAC3B,MAAML,KAAK,EAAX;MACH,CAFD;IAIH,CAVD,CAUE,OAAOM,GAAP,EAAY;MACVL,OAAO,CAACC,GAAR,CAAYI,GAAZ;MACAC,UAAU,CAACP,KAAD,EAAQ,IAAR,CAAV;IACH;EACJ;;EAAA;EAEDjB,SAAS,CAAC,YAAYiB,KAAK,EAAlB,EAAsB,EAAtB,CAAT;EAEA,MAAMQ,WAAW,GAAGtB,QAAQ,GAAG,CAAH,CAA5B;EAEA,MAAM,CAACuB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAACG,cAAc,CAACqB,WAAW,CAACG,EAAb,EAAiB1B,WAAW,EAA5B,CAAf,CAAxC;EACA,MAAM,CAAC2B,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAACE,QAAQ,EAAT,CAAlC;EACA,MAAM,CAAC4B,eAAD,EAAkBC,kBAAlB,IAAwC/B,QAAQ,CAAC,EAAD,CAAtD;EAEA,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,wBACI,QAAC,QAAD;MACA,UAAU,EAAEW,UADZ;MAEA,QAAQ,EAAEc,QAFV;MAGA,eAAe,EAAEK,eAHjB;MAIA,kBAAkB,EAAEC,kBAJpB;MAKA,WAAW,EAAEP;IALb;MAAA;MAAA;MAAA;IAAA,QADJ,EAQKQ,MAAM,CAACC,IAAP,CAAYH,eAAZ,EAA6BI,MAA7B,KAAwC,CAAxC,gBACD,QAAC,QAAD;MACA,UAAU,EAAEvB,UADZ;MAEA,eAAe,EAAEmB,eAFjB;MAGA,kBAAkB,EAAEC,kBAHpB;MAIA,WAAW,EAAEP,WAJb;MAKA,SAAS,EAAEM,eAAe,CAACK,IAAhB,KAAyB;IALpC;MAAA;MAAA;MAAA;IAAA,QADC,GAOD,EAfJ,EAgBKH,MAAM,CAACC,IAAP,CAAYH,eAAZ,EAA6BI,MAA7B,KAAwC,CAAxC,gBACD,QAAC,kBAAD;MACA,eAAe,EAAEJ,eADjB;MAEA,kBAAkB,EAAEC,kBAFpB;MAGA,WAAW,EAAEP;IAHb;MAAA;MAAA;MAAA;IAAA,QADC,GAKD,EArBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAyBH;;GAzDuBd,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}