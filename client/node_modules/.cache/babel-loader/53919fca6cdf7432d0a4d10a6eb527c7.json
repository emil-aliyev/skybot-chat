{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/menu/ChatMenu.jsx\";\nimport React, { useState } from \"react\";\nimport { AiOutlineFileText, AiOutlineSmile, AiOutlineStar, AiOutlineUserAdd } from \"react-icons/ai\";\nimport { getOtherUserInfo } from \"../../api/logic/getters\";\nimport Message from \"../message/Message\";\nimport \"./chatmenu.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMenu(_ref) {\n  let {\n    selectedChannel,\n    setSelectedChannel,\n    currentUser,\n    isPrivate\n  } = _ref;\n\n  // const [messages, setMessages] = useState(selectedChannel.messages);\n  async function sendMessage() {\n    const text = document.querySelector(\"#message-area\").value;\n\n    if (text !== \"\") {\n      const currentDate = new Date();\n      const timestamp = `${currentDate.getHours()}:${currentDate.getMinutes()}:${currentDate.getSeconds()}`;\n      document.querySelector(\"#message-area\").value = \"\";\n      setSelectedChannel(selectedChannel => {\n        const copyChannel = Object.assign({}, selectedChannel);\n        copyChannel.messages = [...[{\n          text: text,\n          senderId: currentUser.id,\n          timestamp: timestamp\n        }], ...copyChannel.messages];\n        return copyChannel;\n      });\n\n      try {\n        await connection.invoke(\"SendToRoom\", selectedChannel.name, text);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }\n\n  async function receiveMessage(message) {\n    console.log(message);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isPrivate ? getOtherUserInfo(selectedChannel, currentUser.id).name : selectedChannel.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: selectedChannel.messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            message: message,\n            currentUser: currentUser\n          }, Math.random() * 100, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messenger\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"message\",\n          id: \"message-area\",\n          cols: \"30\",\n          rows: \"1\",\n          placeholder: \"Type your message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-tools\",\n            children: [/*#__PURE__*/_jsxDEV(AiOutlineFileText, {\n              size: 20,\n              color: \"#6A7681\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AiOutlineUserAdd, {\n              size: 20,\n              color: \"#6A7681\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(AiOutlineSmile, {\n              size: 20,\n              color: \"#6A7681\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c = ChatMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMenu\");","map":{"version":3,"names":["React","useState","AiOutlineFileText","AiOutlineSmile","AiOutlineStar","AiOutlineUserAdd","getOtherUserInfo","Message","ChatMenu","selectedChannel","setSelectedChannel","currentUser","isPrivate","sendMessage","text","document","querySelector","value","currentDate","Date","timestamp","getHours","getMinutes","getSeconds","copyChannel","Object","assign","messages","senderId","id","connection","invoke","name","err","console","error","receiveMessage","message","log","map","Math","random"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/menu/ChatMenu.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { AiOutlineFileText, AiOutlineSmile, AiOutlineStar, AiOutlineUserAdd } from \"react-icons/ai\";\nimport { getOtherUserInfo } from \"../../api/logic/getters\";\nimport Message from \"../message/Message\";\nimport \"./chatmenu.css\";\n\nexport default function ChatMenu({ selectedChannel, setSelectedChannel, currentUser, isPrivate }) {\n\n    // const [messages, setMessages] = useState(selectedChannel.messages);\n\n    async function sendMessage(){\n        const text = document.querySelector(\"#message-area\").value;\n        \n        if(text !== \"\"){\n            const currentDate = new Date();\n            const timestamp = `${currentDate.getHours()}:${currentDate.getMinutes()}:${currentDate.getSeconds()}`;\n            \n            document.querySelector(\"#message-area\").value = \"\";\n            setSelectedChannel(selectedChannel => {\n                const copyChannel = Object.assign({}, selectedChannel);\n                copyChannel.messages = [...[{text: text, senderId: currentUser.id, timestamp:timestamp}], ...copyChannel.messages];\n                return copyChannel;    \n            });\n            \n            try {\n                await connection.invoke(\"SendToRoom\", selectedChannel.name, text);\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    }\n\n    async function receiveMessage(message){\n        console.log(message);\n    }\n\n    return(\n        <div className=\"chat-menu\">\n            <header>\n                <h1>{ isPrivate ? getOtherUserInfo(selectedChannel, currentUser.id).name : selectedChannel.name}</h1>\n            </header>\n            <div className=\"chat-field\">\n                <div className=\"messages\">\n                        {selectedChannel.messages.map((message) => {\n                            return (\n                                <Message key={Math.random()*100} message={message} currentUser={currentUser} />\n                            )\n                        })}\n                </div>\n                <div className=\"messenger\">\n                    <textarea name=\"message\" id=\"message-area\" cols=\"30\" rows=\"1\" placeholder=\"Type your message\"></textarea>\n                    <div className=\"message-panel\">\n                        <div className=\"message-tools\">\n                            <AiOutlineFileText size={20} color=\"#6A7681\"></AiOutlineFileText>\n                            <AiOutlineUserAdd size={20} color=\"#6A7681\"></AiOutlineUserAdd>\n                            <AiOutlineSmile size={20} color=\"#6A7681\"></AiOutlineSmile>\n                        </div>\n                        <button onClick={sendMessage}>Send</button>\n                    </div>\n                </div>\n            </div>\n            \n        </div>\n   )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}