{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport \"./app.css\";\nimport ChatPage from \"./components/page/ChatPage\";\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({}); // const currentUser = getUsers()[0]; \n\n  const [connection, setConnection] = useState();\n  useEffect(() => {\n    // declare the data fetching function\n    const connect = async () => {\n      try {\n        const connection = new HubConnectionBuilder().withUrl(\"https://ab7c-185-129-94-115.eu.ngrok.io/chatHub\").configureLogging(LogLevel.Information).build();\n        console.log(\"SignalR Connected.\");\n        connection.on(\"AddChannel\", channel => console.log(channel));\n        connection.on(\"onError\", msg => console.log(msg));\n        connection.on(\"RecieveMessage\", message => {\n          console.log(message);\n        });\n        connection.onclose(e => {\n          setConnection();\n        });\n        await connection.start();\n        setConnection(connection);\n      } catch (err) {\n        console.log(err);\n      }\n\n      ;\n    }; // call the function\n\n\n    connect() // make sure to catch any error\n    .catch(console.error);\n  }, []);\n\n  const createChannel = async (channel, user) => {\n    try {\n      await connection.invoke(\"CreateRoom\", channel, user);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const sendMessage = async (channel, user, message) => {\n    try {\n      await connection.invoke(\"SendToRoom\", channel, user, message);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const recieveMessage = async (channel, message) => {\n    try {} catch (err) {\n      console.log(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: Object.keys(currentUser).length !== 0 ? /*#__PURE__*/_jsxDEV(ChatPage, {\n      currentUser: currentUser,\n      createChannel: createChannel,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this) : \"Hello\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"/FG6RPFMCcYEhDH7+fiUiTAK9DM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ChatPage","HubConnectionBuilder","LogLevel","App","currentUser","setCurrentUser","connection","setConnection","connect","withUrl","configureLogging","Information","build","console","log","on","channel","msg","message","onclose","e","start","err","catch","error","createChannel","user","invoke","sendMessage","recieveMessage","Object","keys","length"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/App.js"],"sourcesContent":["import { React, useState, useEffect } from \"react\";\nimport \"./app.css\";\n\nimport ChatPage from \"./components/page/ChatPage\";\n\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\n\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({});\n    // const currentUser = getUsers()[0]; \n\n    const [connection, setConnection] = useState();\n    \n    useEffect(() => {\n        // declare the data fetching function\n        const connect = async () => {\n            try {\n                const connection = new HubConnectionBuilder()\n                .withUrl(\"https://ab7c-185-129-94-115.eu.ngrok.io/chatHub\")\n                .configureLogging(LogLevel.Information)\n                .build();\n    \n                console.log(\"SignalR Connected.\");\n    \n                connection.on(\"AddChannel\", (channel) => console.log(channel));\n    \n                connection.on(\"onError\", (msg) => console.log(msg));\n\n                connection.on(\"RecieveMessage\", (message) => {\n                    console.log(message);\n                });\n\n                connection.onclose(e => {\n                    setConnection();\n                });\n                \n                await connection.start();\n                setConnection(connection);\n            } catch (err) {\n                console.log(err);\n            };\n        };\n      \n        // call the function\n        connect()\n          // make sure to catch any error\n          .catch(console.error);\n      }, [])\n\n    const createChannel = async (channel, user) => {\n        try {\n            await connection.invoke(\"CreateRoom\", channel, user);\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    const sendMessage = async (channel, user, message) => {\n        try {\n          await connection.invoke(\"SendToRoom\", channel, user, message);\n        } catch (err) {\n          console.log(err);\n        }\n    }    \n\n    const recieveMessage = async (channel, message) => {\n        try {\n          \n        } catch (err) {\n          console.log(err);\n        }\n      }    \n\n    return(\n        <div className=\"page\">\n            {Object.keys(currentUser).length !== 0 ?\n            <ChatPage \n            currentUser={currentUser}\n            createChannel={createChannel} \n            sendMessage={sendMessage}/>\n            : \"Hello\"}\n        </div>\n    )\n}\n\nexport default App;"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,SAASC,oBAAT,EAA+BC,QAA/B,QAA+C,oBAA/C;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEX,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAFW,CAGX;;EAEA,MAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,EAA5C;EAEAC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMS,OAAO,GAAG,YAAY;MACxB,IAAI;QACA,MAAMF,UAAU,GAAG,IAAIL,oBAAJ,GAClBQ,OADkB,CACV,iDADU,EAElBC,gBAFkB,CAEDR,QAAQ,CAACS,WAFR,EAGlBC,KAHkB,EAAnB;QAKAC,OAAO,CAACC,GAAR,CAAY,oBAAZ;QAEAR,UAAU,CAACS,EAAX,CAAc,YAAd,EAA6BC,OAAD,IAAaH,OAAO,CAACC,GAAR,CAAYE,OAAZ,CAAzC;QAEAV,UAAU,CAACS,EAAX,CAAc,SAAd,EAA0BE,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAAlC;QAEAX,UAAU,CAACS,EAAX,CAAc,gBAAd,EAAiCG,OAAD,IAAa;UACzCL,OAAO,CAACC,GAAR,CAAYI,OAAZ;QACH,CAFD;QAIAZ,UAAU,CAACa,OAAX,CAAmBC,CAAC,IAAI;UACpBb,aAAa;QAChB,CAFD;QAIA,MAAMD,UAAU,CAACe,KAAX,EAAN;QACAd,aAAa,CAACD,UAAD,CAAb;MACH,CAtBD,CAsBE,OAAOgB,GAAP,EAAY;QACVT,OAAO,CAACC,GAAR,CAAYQ,GAAZ;MACH;;MAAA;IACJ,CA1BD,CAFY,CA8BZ;;;IACAd,OAAO,GACL;IADK,CAEJe,KAFH,CAESV,OAAO,CAACW,KAFjB;EAGD,CAlCM,EAkCJ,EAlCI,CAAT;;EAoCA,MAAMC,aAAa,GAAG,OAAOT,OAAP,EAAgBU,IAAhB,KAAyB;IAC3C,IAAI;MACA,MAAMpB,UAAU,CAACqB,MAAX,CAAkB,YAAlB,EAAgCX,OAAhC,EAAyCU,IAAzC,CAAN;IACH,CAFD,CAEE,OAAOJ,GAAP,EAAY;MACVT,OAAO,CAACC,GAAR,CAAYQ,GAAZ;IACH;EACJ,CAND;;EAQA,MAAMM,WAAW,GAAG,OAAOZ,OAAP,EAAgBU,IAAhB,EAAsBR,OAAtB,KAAkC;IAClD,IAAI;MACF,MAAMZ,UAAU,CAACqB,MAAX,CAAkB,YAAlB,EAAgCX,OAAhC,EAAyCU,IAAzC,EAA+CR,OAA/C,CAAN;IACD,CAFD,CAEE,OAAOI,GAAP,EAAY;MACZT,OAAO,CAACC,GAAR,CAAYQ,GAAZ;IACD;EACJ,CAND;;EAQA,MAAMO,cAAc,GAAG,OAAOb,OAAP,EAAgBE,OAAhB,KAA4B;IAC/C,IAAI,CAEH,CAFD,CAEE,OAAOI,GAAP,EAAY;MACZT,OAAO,CAACC,GAAR,CAAYQ,GAAZ;IACD;EACF,CANH;;EAQA,oBACI;IAAK,SAAS,EAAC,MAAf;IAAA,UACKQ,MAAM,CAACC,IAAP,CAAY3B,WAAZ,EAAyB4B,MAAzB,KAAoC,CAApC,gBACD,QAAC,QAAD;MACA,WAAW,EAAE5B,WADb;MAEA,aAAa,EAAEqB,aAFf;MAGA,WAAW,EAAEG;IAHb;MAAA;MAAA;MAAA;IAAA,QADC,GAKC;EANN;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GA7EQzB,G;;KAAAA,G;AA+ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}