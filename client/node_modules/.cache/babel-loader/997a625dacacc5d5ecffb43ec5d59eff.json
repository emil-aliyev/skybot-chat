{"ast":null,"code":"var _jsxFileName = \"/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/Popup/AddChannelPopup/AddChannelPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./addchannelpopup.css\";\nimport { AiOutlineSmile } from \"react-icons/ai\";\nimport Picker from 'emoji-picker-react';\nimport Popup from \"../Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddChannelPopup(_ref) {\n  _s();\n\n  let {\n    setIsPopupOpen\n  } = _ref;\n  const [isOpenEmojiPicker, setIsOpenEmojiPicker] = useState(false);\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Popup, {\n    setIsPopupOpen: setIsPopupOpen,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create a public channel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emoji-picker\",\n          onClick: setIsOpenEmojiPicker(!isOpenEmojiPicker),\n          children: /*#__PURE__*/_jsxDEV(AiOutlineSmile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 102\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), isOpenEmojiPicker ? /*#__PURE__*/_jsxDEV(Picker, {\n          onEmojiClick: onEmojiClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 42\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddChannelPopup, \"IT39kgfI9AEKDkJ3oqJSWK0BatI=\");\n\n_c = AddChannelPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddChannelPopup\");","map":{"version":3,"names":["React","useState","AiOutlineSmile","Picker","Popup","AddChannelPopup","setIsPopupOpen","isOpenEmojiPicker","setIsOpenEmojiPicker","chosenEmoji","setChosenEmoji","onEmojiClick","event","emojiObject"],"sources":["/home/emil/Desktop/skybot-chat/skybot-chat/client/src/components/Popup/AddChannelPopup/AddChannelPopup.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./addchannelpopup.css\";\nimport { AiOutlineSmile } from \"react-icons/ai\";\nimport Picker from 'emoji-picker-react';\n\nimport Popup from \"../Popup\";\n\nexport default function AddChannelPopup({ setIsPopupOpen }){\n\n    const [isOpenEmojiPicker, setIsOpenEmojiPicker] = useState(false);\n\n    const [chosenEmoji, setChosenEmoji] = useState(null);\n\n    const onEmojiClick = (event, emojiObject) => {\n      setChosenEmoji(emojiObject);\n    };\n\n    return(\n        <Popup setIsPopupOpen={setIsPopupOpen} >\n            <h2>Create a public channel</h2>\n            <form action=\"\">\n                <div className=\"form-fields\">\n                    <h4>Name</h4>\n                    <input type=\"text\"/>\n                    <div className=\"emoji-picker\" onClick={setIsOpenEmojiPicker(!isOpenEmojiPicker)}><AiOutlineSmile/></div>\n                    {isOpenEmojiPicker ? <Picker onEmojiClick={onEmojiClick} /> : \"\"}\n                </div>\n            </form>\n        </Popup>    \n    );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,eAAe,SAASC,eAAT,OAA4C;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EAEvD,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CP,QAAQ,CAAC,KAAD,CAA1D;EAEA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C;;EAEA,MAAMU,YAAY,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;IAC3CH,cAAc,CAACG,WAAD,CAAd;EACD,CAFD;;EAIA,oBACI,QAAC,KAAD;IAAO,cAAc,EAAEP,cAAvB;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAM,MAAM,EAAC,EAAb;MAAA,uBACI;QAAK,SAAS,EAAC,aAAf;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAO,IAAI,EAAC;QAAZ;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAK,SAAS,EAAC,cAAf;UAA8B,OAAO,EAAEE,oBAAoB,CAAC,CAACD,iBAAF,CAA3D;UAAA,uBAAiF,QAAC,cAAD;YAAA;YAAA;YAAA;UAAA;QAAjF;UAAA;UAAA;UAAA;QAAA,QAHJ,EAIKA,iBAAiB,gBAAG,QAAC,MAAD;UAAQ,YAAY,EAAEI;QAAtB;UAAA;UAAA;UAAA;QAAA,QAAH,GAA4C,EAJlE;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH;;GAvBuBN,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}